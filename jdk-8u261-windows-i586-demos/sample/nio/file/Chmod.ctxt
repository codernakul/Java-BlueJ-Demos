#BlueJ class context
comment0.target=Chmod
comment0.text=\r\n\ Sample\ code\ that\ changes\ the\ permissions\ of\ files\ in\ a\ similar\ manner\ to\ the\r\n\ chmod(1)\ program.\r\n
comment1.params=exprs
comment1.target=Chmod.Changer\ compile(java.lang.String)
comment1.text=\r\n\ Compiles\ a\ list\ of\ one\ or\ more\ <em>symbolic\ mode\ expressions</em>\ that\r\n\ may\ be\ used\ to\ change\ a\ set\ of\ file\ permissions.\ This\ method\ is\r\n\ intended\ for\ use\ where\ file\ permissions\ are\ required\ to\ be\ changed\ in\r\n\ a\ manner\ similar\ to\ the\ UNIX\ <i>chmod</i>\ program.\r\n\r\n\ <p>\ The\ {@code\ exprs}\ parameter\ is\ a\ comma\ separated\ list\ of\ expressions\r\n\ where\ each\ takes\ the\ form\:\r\n\ <blockquote>\r\n\ <i>who\ operator</i>\ [<i>permissions</i>]\r\n\ </blockquote>\r\n\ where\ <i>who</i>\ is\ one\ or\ more\ of\ the\ characters\ {@code\ 'u'},\ {@code\ 'g'},\r\n\ {@code\ 'o'},\ or\ {@code\ 'a'}\ meaning\ the\ owner\ (user),\ group,\ others,\ or\r\n\ all\ (owner,\ group,\ and\ others)\ respectively.\r\n\r\n\ <p>\ <i>operator</i>\ is\ the\ character\ {@code\ '+'},\ {@code\ '-'},\ or\ {@code\r\n\ '\='}\ signifying\ how\ permissions\ are\ to\ be\ changed.\ {@code\ '+'}\ means\ the\r\n\ permissions\ are\ added,\ {@code\ '-'}\ means\ the\ permissions\ are\ removed,\ and\r\n\ {@code\ '\='}\ means\ the\ permissions\ are\ assigned\ absolutely.\r\n\r\n\ <p>\ <i>permissions</i>\ is\ a\ sequence\ of\ zero\ or\ more\ of\ the\ following\:\r\n\ {@code\ 'r'}\ for\ read\ permission,\ {@code\ 'w'}\ for\ write\ permission,\ and\r\n\ {@code\ 'x'}\ for\ execute\ permission.\ If\ <i>permissions</i>\ is\ omitted\r\n\ when\ assigned\ absolutely,\ then\ the\ permissions\ are\ cleared\ for\r\n\ the\ owner,\ group,\ or\ others\ as\ identified\ by\ <i>who</i>.\ When\ omitted\r\n\ when\ adding\ or\ removing\ then\ the\ expression\ is\ ignored.\r\n\r\n\ <p>\ The\ following\ examples\ demonstrate\ possible\ values\ for\ the\ {@code\r\n\ exprs}\ parameter\:\r\n\r\n\ <table\ border\="0">\r\n\ <tr>\r\n\ \ \ <td>\ {@code\ u\=rw}\ </td>\r\n\ \ \ <td>\ Sets\ the\ owner\ permissions\ to\ be\ read\ and\ write.\ </td>\r\n\ </tr>\r\n\ <tr>\r\n\ \ \ <td>\ {@code\ ug+w}\ </td>\r\n\ \ \ <td>\ Sets\ the\ owner\ write\ and\ group\ write\ permissions.\ </td>\r\n\ </tr>\r\n\ <tr>\r\n\ \ \ <td>\ {@code\ u+w,o-rwx}\ </td>\r\n\ \ \ <td>\ Sets\ the\ owner\ write,\ and\ removes\ the\ others\ read,\ others\ write\r\n\ \ \ \ \ and\ others\ execute\ permissions.\ </td>\r\n\ </tr>\r\n\ <tr>\r\n\ \ \ <td>\ {@code\ o\=}\ </td>\r\n\ \ \ <td>\ Sets\ the\ others\ permission\ to\ none\ (others\ read,\ others\ write\ and\r\n\ \ \ \ \ others\ execute\ permissions\ are\ removed\ if\ set)\ </td>\r\n\ </tr>\r\n\ </table>\r\n\r\n\ @param\ \ \ exprs\r\n\ \ \ \ \ \ \ \ \ \ List\ of\ one\ or\ more\ <em>symbolic\ mode\ expressions</em>\r\n\r\n\ @return\ \ A\ {@code\ Changer}\ that\ may\ be\ used\ to\ changer\ a\ set\ of\r\n\ \ \ \ \ \ \ \ \ \ file\ permissions\r\n\r\n\ @throws\ \ IllegalArgumentException\r\n\ \ \ \ \ \ \ \ \ \ If\ the\ value\ of\ the\ {@code\ exprs}\ parameter\ is\ invalid\r\n
comment2.params=perms
comment2.target=java.util.Set\ change(java.util.Set)
comment3.params=file\ changer
comment3.target=void\ chmod(java.nio.file.Path,\ Chmod.Changer)
comment3.text=\r\n\ Changes\ the\ permissions\ of\ the\ file\ using\ the\ given\ Changer.\r\n
comment4.params=
comment4.target=void\ usage()
comment5.params=args
comment5.target=void\ main(java.lang.String[])
numComments=6
