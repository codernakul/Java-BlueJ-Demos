#BlueJ class context
comment0.target=ChatServer
comment0.text=\r\n\ Implements\ a\ chat\ server,\ this\ class\ holds\ the\ list\ of\ {@code\ clients}\ connected\ to\ the\ server.\r\n\ It\ sets\ up\ a\ server\ socket\ using\ AsynchronousServerSocketChannel\ listening\ to\ a\ specified\ port.\r\n
comment1.params=port
comment1.target=ChatServer(int)
comment1.text=\r\n\r\n\ @param\ port\ to\ listen\ to\r\n\ @throws\ java.io.IOException\ when\ failing\ to\ start\ the\ server\r\n
comment10.params=client\ message
comment10.target=void\ writeMessageToClients(Client,\ java.lang.String)
comment10.text=\r\n\ Sends\ a\ message\ to\ all\ clients\ except\ the\ source.\r\n\ The\ method\ is\ synchronized\ as\ it\ is\ desired\ that\ messages\ are\ sent\ to\r\n\ all\ clients\ in\ the\ same\ order\ as\ received.\r\n\r\n\ @param\ client\ the\ message\ source\r\n\ @param\ message\ the\ message\ to\ be\ sent\r\n
comment11.params=client
comment11.target=void\ removeClient(Client)
comment12.params=
comment12.target=void\ usage()
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=java.net.SocketAddress\ getSocketAddress()
comment2.text=\r\n\r\n\ @return\ The\ socket\ address\ that\ the\ server\ is\ bound\ to\r\n\ @throws\ java.io.IOException\ if\ an\ I/O\ error\ occurs\r\n
comment3.params=
comment3.target=void\ run()
comment3.text=\r\n\ Start\ accepting\ connections\r\n
comment4.params=result\ attachment
comment4.target=void\ completed(java.nio.channels.AsynchronousSocketChannel,\ java.lang.Void)
comment5.params=exc\ attachment
comment5.target=void\ failed(java.lang.Throwable,\ java.lang.Void)
comment6.params=
comment6.target=void\ shutdown()
comment6.text=\r\n\ Shuts\ down\ the\ server\r\n\ @throws\ InterruptedException\ if\ terminated\ while\ waiting\ for\ shutdown\r\n\ @throws\ IOException\ if\ failing\ to\ shutdown\ the\ channel\ group\r\n
comment7.params=channelGroup
comment7.target=java.nio.channels.AsynchronousServerSocketChannel\ createListener(java.nio.channels.AsynchronousChannelGroup)
comment7.text=\r\n\ Creates\ a\ listener\ and\ starts\ accepting\ connections\r\n
comment8.params=channelGroup
comment8.target=java.nio.channels.AsynchronousServerSocketChannel\ openChannel(java.nio.channels.AsynchronousChannelGroup)
comment9.params=channel
comment9.target=void\ handleNewConnection(java.nio.channels.AsynchronousSocketChannel)
comment9.text=\r\n\ Creates\ a\ new\ client\ and\ adds\ it\ to\ the\ list\ of\ connections.\r\n\ Sets\ the\ clients\ handler\ to\ the\ initial\ state\ of\ NameReader\r\n\r\n\ @param\ channel\ the\ newly\ accepted\ channel\r\n
numComments=14
