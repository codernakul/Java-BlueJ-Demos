#BlueJ class context
comment0.target=Client
comment0.text=\r\n\ Client\ represents\ a\ remote\ connection\ to\ the\ chat\ server.\r\n\ It\ contains\ methods\ for\ reading\ and\ writing\ messages\ from\ the\r\n\ channel.\r\n\ Messages\ are\ considered\ to\ be\ separated\ by\ newline,\ so\ incomplete\r\n\ messages\ are\ buffered\ in\ the\ {@code\ Client}.\r\n\r\n\ All\ reads\ and\ writes\ are\ asynchronous\ and\ uses\ the\ nio2\ asynchronous\r\n\ elements.\r\n
comment1.params=channel\ reader
comment1.target=Client(java.nio.channels.AsynchronousSocketChannel,\ ClientReader)
comment10.params=
comment10.target=void\ close()
comment10.text=\r\n\ Closes\ the\ channel\r\n
comment11.params=
comment11.target=void\ run()
comment11.text=\r\n\ Run\ the\ current\ states\ actions.\r\n
comment12.params=userName
comment12.target=void\ setUserName(java.lang.String)
comment13.params=reader
comment13.target=void\ setReader(ClientReader)
comment14.params=
comment14.target=java.lang.String\ getUserName()
comment15.params=message
comment15.target=void\ appendMessage(java.lang.String)
comment16.params=
comment16.target=java.lang.String\ nextMessage()
comment16.text=\r\n\ @return\ the\ next\ newline\ separated\ message\ in\ the\ buffer.\ null\ is\ returned\ if\ the\ buffer\r\n\ doesn't\ contain\ any\ newline.\r\n
comment2.params=buffer
comment2.target=void\ writeMessage(java.nio.ByteBuffer)
comment2.text=\r\n\ Enqueues\ a\ write\ of\ the\ buffer\ to\ the\ channel.\r\n\ The\ call\ is\ asynchronous\ so\ the\ buffer\ is\ not\ safe\ to\ modify\ after\r\n\ passing\ the\ buffer\ here.\r\n\r\n\ @param\ buffer\ the\ buffer\ to\ send\ to\ the\ channel\r\n
comment3.params=
comment3.target=void\ writeFromQueue()
comment4.params=buffer
comment4.target=void\ writeBuffer(java.nio.ByteBuffer)
comment5.params=result\ buffer
comment5.target=void\ completed(java.lang.Integer,\ java.nio.ByteBuffer)
comment6.params=exc\ attachment
comment6.target=void\ failed(java.lang.Throwable,\ java.nio.ByteBuffer)
comment7.params=string
comment7.target=void\ writeStringMessage(java.lang.String)
comment7.text=\r\n\ Sends\ a\ message\r\n\ @param\ string\ the\ message\r\n
comment8.params=client\ message
comment8.target=void\ writeMessageFrom(Client,\ java.lang.String)
comment8.text=\r\n\ Send\ a\ message\ from\ a\ specific\ client\r\n\ @param\ client\ the\ message\ is\ sent\ from\r\n\ @param\ message\ to\ send\r\n
comment9.params=completionHandler
comment9.target=void\ read(java.nio.channels.CompletionHandler)
comment9.text=\r\n\ Enqueue\ a\ read\r\n\ @param\ completionHandler\ callback\ on\ completed\ read\r\n
numComments=17
